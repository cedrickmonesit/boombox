{"version":3,"sources":["images/logo.png","history.js","actions/index.js","actions/types.js","components/playlists/UserPlaylists.js","components/AudioPlayer/Player.js","components/playlists/Playlist.js","components/searchresults/SearchResults.js","components/navigation/Navigation.js","components/home/Home.js","components/searchbar/Searchbar.js","components/search/Search.js","components/artists/Artists.js","components/artist/Artist.js","components/albums/Albums.js","components/browse/Browse.js","components/album/Album.js","components/App.js","reducers/index.js","reducers/user/userPlaylistsReducer.js","reducers/tracks/playlistTracksReducer.js","reducers/tokenStatus/tokenStatusReducer.js","reducers/currentMusicIndex/currentMusicIndexReducer.js","reducers/searchResults.js/searchResultsReducer.js","reducers/newReleases/newReleasesReducer.js","reducers/featuredPlaylists/featuredPlaylistsReducer.js","reducers/album/albumTracksReducer.js","reducers/myTopArtists/myTopArtistsReducer.js","reducers/artistsTopTracks/artistTopTracksReducer.js","reducers/artist/artistReducer.js","reducers/albums/albumsReducer.js","reducers/getAlbum/getAlbumReducer.js","index.js"],"names":["module","exports","createHashHistory","spotifyApi","SpotifyWebApi","getUserPlaylists","dispatch","a","response","type","payload","items","getPlaylistTracks","id","setCurrentMusicIndex","index","getNewReleases","getFeaturedPlaylists","getAlbumTracks","UserPlaylists","onClickNavPlaylist","name","history","push","this","props","userPlaylists","map","playlist","className","onClick","key","src","images","url","alt","Fragment","getPlaylists","React","Component","connect","state","Player","renderTracks","tracks","track","preview_url","title","filter","handleClickPrevious","setState","currentMusicIndex","handleClickNext","length","console","log","renderAudioSource","renderAudioPlayer","header","autoPlayAfterSrcChange","showSkipControls","showJumpControls","customVolumeControls","customAdditionalControls","defaultCurrentTime","defaultDuration","onClickPrevious","onClickNext","layout","prevProps","parseInt","Playlist","y","renderImages","album","doImagesExist","mapArtists","artists","playlists","match","params","handlePlaylistClick","e","target","maptracks","artist","onClickCapture","setAlbumTracksorTracks","ownProps","playlistsTracks","albumTracks","SearchResults","searchResults","Navigation","href","logo","to","Home","renderAlbums","newReleasesAlbums","image","style","background","featuredPlaylists","Searchbar","onInputChange","event","searchTerm","value","getSearchResults","onFormSubmit","preventDefault","document","querySelector","results","onSubmit","onChange","placeholder","searchterm","types","search","Search","Artists","renderArtists","getMyTopArtists","myTopArtists","Artist","getArtistTopTracks","artist_id","getArtist","followers","toString","replace","genres","genre","artistTopTracks","renderFollowers","total","renderGenres","mapTracks","renderArtist","renderTopTracks","Albums","getMySavedAlbums","albums","item","Album","getAlbum","label","release_date","renderAlbumContent","renderPlaylist","App","token","getHashParams","localStorage","setItem","setAccessToken","getItem","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","path","exact","component","Browse","setTokenStatus","status","isLoggedIn","combineReducers","tokenStatus","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.7a937e09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e311bf2c.png\";","//history is installed automatically by react-router-dom\n//it is a dependency that react-router-dom uses\n//createBrowserHistory() is a function we can call to get the history object\nimport { createHashHistory } from \"history\";\n\n//We have to create a plain router instead of a browser router\n//Since we are managing the history ourselves\nexport default createHashHistory();\n//Having control of the History gives us the ability to move around the pages using History.push usually used in action creators\n","import SpotifyWebApi from \"spotify-web-api-js\";\nimport history from \"../history\";\n\n//import history from \"../history\";\nimport {\n  GET_USER_PLAYLISTS,\n  GET_PLAYLIST_TRACKS,\n  SET_TOKEN_STATUS,\n  SET_CURRENT_MUSIC_INDEX,\n  GET_SEARCH_RESULTS,\n  GET_NEW_RELEASES,\n  GET_FEATURED_PLAYLISTS,\n  GET_ALBUM_TRACKS,\n  GET_MY_TOP_ARTISTS,\n  GET_ARTIST_TOP_TRACKS,\n  GET_ARTIST,\n  GET_MY_SAVED_ALBUMS,\n  GET_ALBUM,\n} from \"./types\";\n\nconst spotifyApi = new SpotifyWebApi();\n\n//action creator\nexport const setTokenStatus = (token, status) => async (dispatch) => {\n  //dispatch to reducer\n  dispatch({\n    type: SET_TOKEN_STATUS,\n    payload: { token: token, isLoggedIn: status },\n  });\n  //history.push(`/list/search/results/${searchTerm}`);\n};\n\n//action creator\n//this must be async because we have to wait for response to be receive the data\nexport const getUserPlaylists = () => async (dispatch) => {\n  const response = await spotifyApi.getUserPlaylists();\n\n  dispatch({ type: GET_USER_PLAYLISTS, payload: response.items });\n};\n\n//action creator\n//playlist tracks\nexport const getPlaylistTracks = (id) => async (dispatch) => {\n  const response = await spotifyApi.getPlaylistTracks(id);\n\n  //dispatch to reducer\n  //must dispatch with using redux thunk middleware since we are giving the reducer a promise\n  dispatch({ type: GET_PLAYLIST_TRACKS, payload: response });\n};\n\n//action creator\nexport const setCurrentMusicIndex = (index) => (dispatch) => {\n  const response = index;\n\n  dispatch({ type: SET_CURRENT_MUSIC_INDEX, payload: response });\n};\n\n//action creator\n//this must be async because we have to wait for response to be receive the data\nexport const getSearchResults = (searchterm, types) => async (dispatch) => {\n  const response = await spotifyApi.search(searchterm, types);\n\n  dispatch({ type: GET_SEARCH_RESULTS, payload: response });\n};\n\n//action creator\nexport const getNewReleases = () => async (dispatch) => {\n  const response = await spotifyApi.getNewReleases();\n\n  dispatch({ type: GET_NEW_RELEASES, payload: response });\n};\n\n//action creator\nexport const getFeaturedPlaylists = () => async (dispatch) => {\n  const response = await spotifyApi.getFeaturedPlaylists();\n\n  dispatch({ type: GET_FEATURED_PLAYLISTS, payload: response });\n};\n\n//get albums\n//action creator\nexport const getAlbumTracks = (id) => async (dispatch) => {\n  const response = await spotifyApi.getAlbumTracks(id);\n\n  dispatch({ type: GET_ALBUM_TRACKS, payload: response });\n};\n\n//action creator\nexport const getMyTopArtists = () => async (dispatch) => {\n  const response = await spotifyApi.getMyTopArtists();\n\n  dispatch({ type: GET_MY_TOP_ARTISTS, payload: response.items });\n};\n\n//action creator\nexport const getArtistTopTracks = (id) => async (dispatch) => {\n  //artist id and country id\n  const response = await spotifyApi.getArtistTopTracks(id, \"US\");\n\n  dispatch({ type: GET_ARTIST_TOP_TRACKS, payload: response.tracks });\n};\n\n//action creator\nexport const getArtist = (id) => async (dispatch) => {\n  //artist id\n  const response = await spotifyApi.getArtist(id);\n\n  dispatch({ type: GET_ARTIST, payload: response });\n};\n\n//action creator\nexport const getMySavedAlbums = () => async (dispatch) => {\n  //artist id\n  const response = await spotifyApi.getMySavedAlbums();\n\n  dispatch({ type: GET_MY_SAVED_ALBUMS, payload: response });\n};\n\n//action creator\nexport const getAlbum = (id) => async (dispatch) => {\n  //album\n  const response = await spotifyApi.getAlbum(id);\n\n  dispatch({ type: GET_ALBUM, payload: response });\n};\n","//playlists\nexport const GET_USER_PLAYLISTS = \"GET_USER_PLAYLISTS\";\nexport const GET_PLAYLIST_TRACKS = \"GET_PLAYLIST_TRACKS\";\n\n//token\nexport const SET_TOKEN_STATUS = \"SET_TOKEN_STATUS\";\n\n//current music index\nexport const SET_CURRENT_MUSIC_INDEX = \"SET_CURRENT_MUSIC_INDEX\";\n\n//search results\nexport const GET_SEARCH_RESULTS = \"GET_SEARCH_RESULTS\";\n\n//new releases\nexport const GET_NEW_RELEASES = \"GET_NEW_RELEASES\";\n\n//Featured Playlists\nexport const GET_FEATURED_PLAYLISTS = \"GET_FEATURED_PLAYLISTS\";\n\n//Album\nexport const GET_ALBUM_TRACKS = \"GET_ALBUM_TRACKS\";\n\n//mytopartists\nexport const GET_MY_TOP_ARTISTS = \"GET_MY_TOP_ARTISTS\";\n\n//artisttoptracks\nexport const GET_ARTIST_TOP_TRACKS = \"GET_ARTIST_TOP_TRACKS\";\n\n//artist\nexport const GET_ARTIST = \"GET_ARTIST\";\n\n//mysavedalbums\nexport const GET_MY_SAVED_ALBUMS = \"GET_MY_SAVED_ALBUMS\";\n\n//getAlbum\nexport const GET_ALBUM = \"GET_ALBUM\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { getUserPlaylists } from \"../../actions\";\nimport \"./userplaylist.scss\";\nimport history from \"../../history\";\n\nclass UserPlaylists extends React.Component {\n  componentDidMount() {\n    this.props.getUserPlaylists();\n  }\n\n  onClickNavPlaylist = (name) => {\n    history.push(`/playlist/${name}`);\n  };\n\n  getPlaylists() {\n    return this.props.userPlaylists.map((playlist) => {\n      return (\n        <div\n          className=\"main-user-playlists\"\n          onClick={() => {\n            this.onClickNavPlaylist(playlist.name);\n          }}\n          key={playlist.id}\n        >\n          <img src={playlist.images[1].url} alt={playlist.name} />\n          <p>{playlist.name}</p>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"main-playlists\">{this.getPlaylists()}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userPlaylists: state.userPlaylists,\n  };\n};\n\nexport default connect(mapStateToProps, { getUserPlaylists })(UserPlaylists);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\n\nimport { getPlaylistTracks, setCurrentMusicIndex } from \"../../actions\";\nimport \"./player.scss\";\n\nclass Player extends React.Component {\n  //setstate before component mounts\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentMusicIndex: 0,\n      playlist: this.renderTracks(this.props.tracks),\n    };\n  }\n\n  //if props are different from previos props reset currentmusicindex and set new playlist\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      //set currentmusicindex to 0\n      //this.setState({ currentMusicIndex: 0 });\n\n      //if there is a currentmusicindex it will set this to that index\n      //this lets us click on a track in a playlist to play on the player\n      //if there are new playlist of tracks reset index to 0\n      this.setState({\n        currentMusicIndex:\n          this.props.tracks !== prevProps.tracks\n            ? 0\n            : parseInt(this.props.currentMusicIndex),\n      });\n\n      this.setState({ playlist: this.renderTracks(this.props.tracks) });\n    }\n  }\n\n  //map through the playlist to get tracks\n  //filter tracks that aren't null\n  //return playlist of tracks\n  renderTracks = (tracks) => {\n    if (tracks) {\n      const playlist = tracks.map((track) => {\n        if (track.preview_url) {\n          return {\n            title: track.name,\n            src: track.preview_url,\n          };\n        }\n        return null;\n      });\n      return playlist.filter((track) => {\n        return track != null;\n      });\n    }\n    return [\n      {\n        title: \"\",\n        src: \"\",\n      },\n    ];\n  };\n\n  //handle previous button\n  //if index is 0 return 0\n  //if index is greater than 0 subtract 1\n  handleClickPrevious = () => {\n    this.setState({\n      currentMusicIndex:\n        this.state.currentMusicIndex > 0\n          ? this.state.currentMusicIndex - 1\n          : this.state.currentMusicIndex,\n    });\n  };\n\n  //if the current index is not equal to playlist length minus 1, add 1 to curentmusicindex\n  //else return currentmusicindex\n  handleClickNext = () => {\n    this.setState({\n      currentMusicIndex:\n        this.state.currentMusicIndex !== this.state.playlist.length - 1\n          ? this.state.currentMusicIndex + 1\n          : this.state.currentMusicIndex,\n    });\n    console.log(this.state.currentMusicIndex);\n  };\n\n  //if audio source is empty return undefined\n  //this stops the audioplayer from throwing an undefined error at a certain index\n  renderAudioSource = () => {\n    if (this.state.playlist) {\n      if (this.state.playlist.length > 0) {\n        return this.state.playlist[this.state.currentMusicIndex];\n      }\n    }\n  };\n\n  renderAudioPlayer = () => {\n    if (this.renderAudioSource()) {\n      return (\n        <AudioPlayer\n          header={this.renderAudioSource().title}\n          className=\"audio-player\"\n          autoPlayAfterSrcChange={true}\n          showSkipControls={this.props.showSkipControls} //true, false\n          showJumpControls={this.props.showJumpControls} //true, false\n          customVolumeControls={this.props.customVolumeControls} //[\"\"]\n          customAdditionalControls={this.props.customAdditionalControls} //[\"\"]\n          defaultCurrentTime={\"\"} //\"\"\n          defaultDuration={\"\"} //\"\"\n          src={this.renderAudioSource().src}\n          onClickPrevious={this.handleClickPrevious}\n          onClickNext={this.handleClickNext}\n          layout={\"horizontal\"} //horizontal, stacked-reverse\n        />\n      );\n    }\n    return null;\n  };\n\n  render() {\n    return <React.Fragment>{this.renderAudioPlayer()}</React.Fragment>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // tracks: state.playlistsTracks.items,\n    currentMusicIndex: state.currentMusicIndex,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPlaylistTracks,\n  setCurrentMusicIndex,\n})(Player);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  getUserPlaylists,\n  getPlaylistTracks,\n  setCurrentMusicIndex,\n  getAlbumTracks,\n} from \"../../actions\";\n\nimport AudioPlayer from \"../AudioPlayer/Player\";\nimport \"./playlist.scss\";\n\nclass Playlist extends React.Component {\n  componentDidMount() {\n    if (this.props.match) {\n      const id = this.props.match.params.id;\n      const name = this.props.match.params.name;\n\n      if (name) {\n        //id of playlist\n        this.props.getUserPlaylists();\n\n        //if the name of playlist matches it will take the matched playlist id and fetch the tracks for the matched playlist\n        this.props.playlists.map((playlist) => {\n          if (playlist.name === this.props.match.params.name) {\n            this.props.getPlaylistTracks(playlist.id);\n          }\n          return null;\n        });\n      }\n      //if id exists\n      //get playlist tracks\n      else if (id) {\n        this.props.getPlaylistTracks(id);\n        //this.props.getAlbumTracks(id);\n      }\n    }\n  }\n\n  //map through artists\n  //to render in rendertracks method\n  mapArtists(artists) {\n    if (artists) {\n      return artists.map((artist) => {\n        if (artists.length > 1) {\n          return `${artist.name} | `;\n        }\n        return artist.name;\n      });\n    }\n  }\n\n  //map through tracks and return track jsx\n  renderTracks = (tracks) => {\n    //map through tracks making a new array from the playlist that was fetch from api\n    if (tracks) {\n      const x = tracks.map((track) => {\n        if (track.track.preview_url) {\n          return track;\n        }\n        return null;\n      });\n      //if track is not null add it to the new array\n      const y = x.filter((track) => {\n        return track != null;\n      });\n\n      const renderImages = (track, images) => {\n        if (images) {\n          return <img src={images[1].url} alt={track.name} />;\n        }\n        return null;\n      };\n\n      const doImagesExist = (track) => {\n        if (track.track.album) {\n          return renderImages(track.track, track.track.album.images);\n        } else {\n          return renderImages(track.track, null);\n        }\n      };\n\n      //map through the filtered array return track jsx\n      return y.map((track, index) => {\n        return (\n          <div className=\"playlist-track\" id={index} key={track.track.id}>\n            {doImagesExist(track)}\n            <div className=\"playlist-track-summary\">\n              <p>{track.track.name} </p>\n              <p>{this.mapArtists(track.track.artists)}</p>\n            </div>\n          </div>\n        );\n      });\n    }\n    //this will only happen if the playlist match the params name and will fetch the new playlist\n    //get tracks of playlist that matches the name of the playlist selected\n    this.props.playlists.map((playlist) => {\n      if (playlist.name === this.props.match.params.name) {\n        this.props.getPlaylistTracks(playlist.id);\n      }\n      return null;\n    });\n  };\n\n  //set currentmusicindex with a click this lets us play the music track that was clicked\n  handlePlaylistClick = (e) => {\n    if (e.target.id) {\n      console.log(e.target.id);\n\n      //set currentmusicindex in redux store\n      this.props.setCurrentMusicIndex(e.target.id);\n    }\n  };\n\n  //make new array with tracks without track key\n  maptracks = (tracks) => {\n    if (tracks) {\n      return tracks.map((track) => {\n        console.log(track);\n        return track.track;\n      });\n    }\n  };\n\n  setAlbumTracksorTracks() {\n    if (this.props.tracks) {\n      return this.props.tracks;\n    }\n  }\n\n  render() {\n    console.log(this.props.tracks);\n    //event bubbling capture onclick event and get target id for currentmusicindex\n    return (\n      <React.Fragment>\n        <div className=\"playlist\" onClickCapture={this.handlePlaylistClick}>\n          {this.renderTracks(this.setAlbumTracksorTracks())}\n        </div>\n        <AudioPlayer tracks={this.maptracks(this.setAlbumTracksorTracks())} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  if (!ownProps.tracks) {\n    return {\n      tracks: state.playlistsTracks.items,\n      playlists: state.userPlaylists,\n      albumTracks: state.albumTracks.items,\n    };\n  }\n  return {};\n};\n\nexport default connect(mapStateToProps, {\n  getUserPlaylists,\n  getPlaylistTracks,\n  setCurrentMusicIndex,\n  getAlbumTracks,\n})(Playlist);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { setCurrentMusicIndex } from \"../../actions\";\nimport AudioPlayer from \"../AudioPlayer/Player\";\n\nclass SearchResults extends React.Component {\n  //map through artists\n  //to render in rendertracks method\n  mapArtists(artists) {\n    if (artists) {\n      return artists.map((artist) => {\n        if (artists.length > 1) {\n          return `${artist.name} | `;\n        }\n        return artist.name;\n      });\n    }\n  }\n\n  renderTracks() {\n    if (this.props.tracks) {\n      const tracks = this.props.tracks.items.map((track) => {\n        if (track.preview_url) {\n          return track;\n        }\n        return null;\n      });\n      const x = tracks.filter((track) => {\n        return track != null;\n      });\n      return x.map((track, index) => {\n        return (\n          <div className=\"playlist-track\" id={index} key={track.id}>\n            <img src={track.album.images[1].url} alt={track.name} />\n            <div className=\"playlist-track-summary\">\n              <p>{track.name} </p>\n              <p>{this.mapArtists(track.artists)}</p>\n            </div>\n          </div>\n        );\n      });\n    }\n  }\n\n  renderAudioPlayer() {\n    if (this.props.tracks) {\n      return <AudioPlayer tracks={this.props.tracks.items} />;\n    }\n  }\n\n  //set currentmusicindex with a click this lets us play the music track that was clicked\n  handlePlaylistClick = (e) => {\n    if (e.target.id) {\n      console.log(e.target.id);\n\n      //set currentmusicindex in redux store\n      this.props.setCurrentMusicIndex(e.target.id);\n    }\n  };\n\n  render() {\n    //event bubbling capture onclick event and get target id for currentmusicindex\n    return (\n      <React.Fragment>\n        <div onClickCapture={this.handlePlaylistClick}>\n          {this.renderTracks()}\n        </div>\n        {this.renderAudioPlayer()}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { tracks: state.searchResults.tracks };\n};\n\nexport default connect(mapStateToProps, { setCurrentMusicIndex })(\n  SearchResults,\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MdLibraryMusic } from \"react-icons/md\";\nimport { TiHome } from \"react-icons/ti\";\nimport { FaSearch } from \"react-icons/fa\";\nimport logo from \"../../images/logo.png\";\n\nimport \"./navigation.scss\";\n\nconst Navigation = () => {\n  return (\n    <nav className=\"main-nav\">\n      <div className=\"main-nav-top\">\n        <a href=\"/\">\n          <img className=\"logo\" src={logo} alt=\"logo\" />\n        </a>\n        <h1>Boombox</h1>\n        <a href=\"https://shrouded-reef-81516.herokuapp.com/\">\n          <button> Login </button>\n        </a>\n      </div>\n      <div className=\"main-nav-bottom\">\n        <Link to=\"/\">\n          <TiHome className=\" nav-home-icon\" />\n        </Link>\n        <Link to=\"/search\">\n          <FaSearch className=\" nav-search-icon\" />\n        </Link>\n        <Link to=\"/playlists\">\n          <MdLibraryMusic className=\" nav-library-icon\" />\n        </Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { getNewReleases, getFeaturedPlaylists } from \"../../actions\";\n\nimport \"./home.scss\";\n\nclass Home extends React.Component {\n  componentDidMount() {\n    this.props.getNewReleases();\n    this.props.getFeaturedPlaylists();\n  }\n\n  renderAlbums = () => {\n    if (this.props.newReleasesAlbums) {\n      return this.props.newReleasesAlbums.items.map((album) => {\n        return album.images.map((image) => {\n          return (\n            <Link key={album.id} to={`/browse/${album.id}`}>\n              <div\n                className=\"home-album-img\"\n                style={{\n                  background: `linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url(${image.url}) center/cover no-repeat border-box, rgb(255, 255, 255)`,\n                }}\n                alt={album.name}\n              ></div>\n            </Link>\n          );\n        });\n      });\n    }\n    return \"\";\n  };\n\n  render() {\n    return <div className=\"grid-container\">{this.renderAlbums()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tracks: state.playlistsTracks.items,\n    featuredPlaylists: state.featuredPlaylists.playlists,\n    newReleasesAlbums: state.newReleasesAlbums.playlists,\n  };\n};\nexport default connect(mapStateToProps, {\n  getNewReleases,\n  getFeaturedPlaylists,\n})(Home);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getSearchResults } from \"../../actions\";\n\nimport \"./searchbar.scss\";\n\nclass Searchbar extends React.Component {\n  onInputChange = (event) => {\n    const searchTerm = event.target.value;\n\n    this.props.getSearchResults(searchTerm, [\n      \"album\",\n      \"artist\",\n      \"playlist\",\n      \"track\",\n    ]);\n  };\n\n  onFormSubmit = (event) => {\n    event.preventDefault(); //Prevents page from refresh on submit of the form\n    const searchTerm = document.querySelector(\".searchbar-input\").value;\n    this.props.getSearchResults(searchTerm, [\n      \"album\",\n      \"artist\",\n      \"playlist\",\n      \"track\",\n    ]);\n  };\n\n  render() {\n    console.log(this.props.results);\n    //event bubbling capture onclick event and get target id for currentmusicindex\n    return (\n      <form\n        onSubmit={this.onFormSubmit}\n        className=\"searchbar animated fadeInDown\"\n      >\n        <input\n          className=\"searchbar-input\"\n          onChange={this.onInputChange}\n          placeholder=\"search...\"\n          type=\"text\"\n        />\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    results: state.searchResults,\n  };\n};\nexport default connect(mapStateToProps, { getSearchResults })(Searchbar);\n","import React from \"react\";\n\nimport Searchbar from \"../searchbar/Searchbar\";\nimport SearchResults from \"../searchresults/SearchResults\";\n\nconst Search = () => {\n  return (\n    <React.Fragment>\n      <Searchbar />\n      <SearchResults />\n    </React.Fragment>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { getMyTopArtists } from \"../../actions\";\n\nimport \"./artists.scss\";\n\nclass Artists extends React.Component {\n  componentDidMount() {\n    this.props.getMyTopArtists();\n  }\n\n  renderArtists = () => {\n    if (this.props.artists) {\n      return this.props.artists.map((artist) => {\n        return (\n          <div className=\"artist-container\" key={artist.id}>\n            <Link to={`artist/${artist.id}`}>\n              <div\n                className=\"artist-img\"\n                style={{\n                  background: `linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)), url(${artist.images[1].url}) center/cover no-repeat border-box, rgb(255, 255, 255)`,\n                }}\n                alt={artist.name}\n              ></div>\n              <p>{artist.name}</p>\n            </Link>\n          </div>\n        );\n      });\n    }\n  };\n\n  render() {\n    return <div className=\"artists-grid-container\">{this.renderArtists()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    artists: state.myTopArtists,\n  };\n};\nexport default connect(mapStateToProps, { getMyTopArtists })(Artists);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getArtistTopTracks, getArtist } from \"../../actions\";\n\nimport \"./artist.scss\";\nimport Playlist from \"../playlists/Playlist\";\n\nclass Artist extends React.Component {\n  componentDidMount() {\n    this.props.getArtistTopTracks(this.props.match.params.artist_id);\n    this.props.getArtist(this.props.match.params.artist_id);\n  }\n\n  //converts followers number to commas 1,000,000\n  renderFollowers(followers) {\n    return followers.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  renderGenres(genres) {\n    return genres.map((genre) => {\n      return ` ${genre}`;\n    });\n  }\n\n  //reorder artisttoptracks data to pass as a prop to Playlist component\n  mapTracks() {\n    if (this.props.artistTopTracks) {\n      return this.props.artistTopTracks.map((track) => {\n        return {\n          track: {\n            id: track.id,\n            album: track.album,\n            name: track.name,\n            artists: track.artists,\n            preview_url: track.preview_url,\n          },\n        };\n      });\n    }\n  }\n\n  renderArtist() {\n    const artist = this.props.artist;\n    if (this.props.artist.images) {\n      return (\n        <React.Fragment>\n          <div className=\"artist-content\">\n            <img\n              className=\"artist-profile-pic\"\n              src={artist.images[1].url}\n              alt={artist.name}\n            />\n            <div className=\"artist-summary\">\n              <h2>{artist.name}</h2>\n              <p>{`Career: ${artist.type}`}</p>\n              <p>{`Followers: ${this.renderFollowers(\n                artist.followers.total,\n              )}`}</p>\n              <p>{`Genres: ${this.renderGenres(artist.genres)}`}</p>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n\n  renderTopTracks() {\n    if (this.props.artist.images) {\n      return (\n        <div className=\"artist-top-tracks\">\n          <Playlist\n            tracks={this.mapTracks()}\n            id={() => {\n              if (this.props.match.params.id) {\n                return this.props.match.params.id;\n              }\n              return null;\n            }}\n          />\n        </div>\n      );\n    }\n  }\n\n  render() {\n    console.log(this.props.artistTopTracks);\n    return (\n      <div>\n        {this.renderArtist()} {this.renderTopTracks()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    artistTopTracks: state.artistTopTracks,\n    artist: state.artist,\n  };\n};\nexport default connect(mapStateToProps, { getArtistTopTracks, getArtist })(\n  Artist,\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { getMySavedAlbums } from \"../../actions\";\n\nimport \"../home/home.scss\";\n\n//user albums\nclass Albums extends React.Component {\n  componentDidMount() {\n    this.props.getMySavedAlbums();\n  }\n\n  renderAlbums() {\n    if (this.props.albums.items) {\n      return this.props.albums.items.map((album) => {\n        return (\n          <Link key={album.album.id} to={`/album/${album.album.id}`}>\n            <div\n              className=\"home-album-img\"\n              style={{\n                background: `linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url(${album.album.images[1].url}) center/cover no-repeat border-box, rgb(255, 255, 255)`,\n              }}\n              alt={album.album.name}\n            ></div>\n          </Link>\n        );\n      });\n    }\n    return \"\";\n  }\n\n  render() {\n    return <div className=\"grid-container\">{this.renderAlbums()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    albums: state.albums,\n  };\n};\nexport default connect(mapStateToProps, { getMySavedAlbums })(Albums);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  getNewReleases,\n  getFeaturedPlaylists,\n  getPlaylistTracks,\n} from \"../../actions\";\n\nimport \"./browse.scss\";\nimport Playlist from \"../playlists/Playlist\";\n\nclass Home extends React.Component {\n  componentDidMount() {\n    this.props.getNewReleases();\n    this.props.getFeaturedPlaylists();\n    this.props.getPlaylistTracks(this.props.match.params.id);\n  }\n\n  //reorder featuredplaylist data to pass as a prop to Playlist component\n  mapTracks() {\n    if (this.props.tracks) {\n      return this.props.tracks.map((item) => {\n        return {\n          track: {\n            id: item.track.id,\n            album: item.track.album,\n            name: item.track.name,\n            artist: item.track.artists,\n            preview_url: item.track.preview_url,\n          },\n        };\n      });\n    }\n  }\n\n  renderTracks() {\n    if (this.props.tracks) {\n      return <Playlist tracks={this.mapTracks()} id={\"id\"} />;\n    }\n  }\n  render() {\n    console.log(this.props.tracks);\n    return <React.Fragment>{this.renderTracks()}</React.Fragment>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    featuredPlaylists: state.featuredPlaylists.playlists.items,\n    newReleasesAlbums: state.newReleasesAlbums.playlists,\n    tracks: state.playlistsTracks.items,\n  };\n};\nexport default connect(mapStateToProps, {\n  getNewReleases,\n  getFeaturedPlaylists,\n  getPlaylistTracks,\n})(Home);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAlbum, getAlbumTracks } from \"../../actions\";\n\nimport Playlist from \"../playlists/Playlist\";\nimport \"./album.scss\";\n\nclass Album extends React.Component {\n  componentDidMount() {\n    this.props.getAlbum(this.props.match.params.id);\n    this.props.getAlbumTracks(this.props.match.params.id);\n  }\n\n  mapTracks() {\n    if (this.props.albumTracks.items) {\n      return this.props.albumTracks.items.map((item) => {\n        return {\n          track: {\n            id: item.id,\n            name: item.name,\n            artists: item.artists,\n            preview_url: item.preview_url,\n          },\n        };\n      });\n    }\n  }\n\n  renderPlaylist() {\n    if (this.props.albumTracks) {\n      return <Playlist tracks={this.mapTracks()} />;\n    }\n    return null;\n  }\n\n  renderAlbumContent() {\n    if (this.props.album.images) {\n      return (\n        <div className=\"album-container-content\">\n          <img\n            className=\"album-container-content-image-cover\"\n            src={this.props.album.images[1].url}\n            alt={this.props.album.name}\n          />\n          <div className=\"album-container-content-summary\">\n            <h2>{this.props.album.name}</h2>\n            <p>Artist: {this.props.album.artists[0].name}</p>\n            <p>Label: {this.props.album.label}</p>\n            <p>Released: {this.props.album.release_date}</p>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div className=\"album-container\">\n        {this.renderAlbumContent()}\n        {this.renderPlaylist()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    album: state.album,\n    albumTracks: state.albumTracks,\n  };\n};\n\nexport default connect(mapStateToProps, { getAlbum, getAlbumTracks })(Album);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { HashRouter, Route, Switch, Link } from \"react-router-dom\";\n\nimport { setTokenStatus } from \"../actions\";\n\nimport history from \"../history\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nimport UserPlaylists from \"./playlists/UserPlaylists\";\nimport Playlist from \"./playlists/Playlist\";\nimport SearchResults from \"./searchresults/SearchResults\";\nimport Navigation from \"./navigation/Navigation\";\nimport Home from \"./home/Home\";\nimport Search from \"./search/Search\";\nimport logo from \"../images/logo.png\";\nimport Artists from \"./artists/Artists\";\nimport Artist from \"./artist/Artist\";\nimport Albums from \"./albums/Albums\";\nimport Browse from \"./browse/Browse\";\nimport Album from \"./album/Album\";\nimport \"./app.scss\";\n\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    const token = params.token;\n\n    //const isLoggedIn = token ? true : false;\n    //set new token when signin\n    if (token) {\n      localStorage.setItem(\"token\", token);\n\n      // sessionStorage.setItem(\"token\", token);\n      //spotify-web-api-library needs the token to use library methods to request to the api\n      spotifyApi.setAccessToken(localStorage.getItem(\"token\"));\n\n      //action creator\n      //update status\n      //this.props.setTokenStatus(token, isLoggedIn);\n      //set token on refresh\n    } else if (localStorage.getItem(\"token\")) {\n      //set token for api library use\n      spotifyApi.setAccessToken(localStorage.getItem(\"token\"));\n    }\n\n    //spotifyApi.setAccessToken(sessionStorage.getItem(\"token\"));\n  }\n\n  //get hash params for token\n  getHashParams() {\n    let hashParams = {};\n    let e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(9);\n    e = r.exec(q);\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    history.push(\"/\");\n    return hashParams;\n  }\n\n  //these routes are from Router used to navigate the one page app\n  //navigation is using history.push and Link tags to show components\n  //anything outside of the switch will not be changed on the one page app\n  render() {\n    return (\n      <HashRouter history={history}>\n        <div className=\"main\">\n          <div className=\"main-header\">\n            <h1>Boombox</h1>\n            <a href=\"https://shrouded-reef-81516.herokuapp.com/\">Login</a>\n          </div>\n          <div className=\"sidebar\">\n            <img className=\"logo\" src={logo} alt=\"Boombox logo\" />\n            <Link to=\"/\">Browse</Link>\n            <Link to=\"/search\">Search</Link>\n            <Link to=\"/albums\">Albums</Link>\n            <Link to=\"/artists\">Artists</Link>\n            <Link to=\"/playlists\">Playlists</Link>\n          </div>\n          <div className=\"content\">\n            <div className=\"main-playlists-nav\">\n              <Link to=\"/playlists\">Playlists</Link>\n              <Link to=\"/artists\">Artists</Link>\n              <Link to=\"/albums\">Albums</Link>\n            </div>\n            <div className=\"grid-content\">\n              <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/search\" exact component={Search} />\n                <Route path=\"/search/results\" exact component={SearchResults} />\n                <Route path=\"/playlists\" exact component={UserPlaylists} />\n                <Route path=\"/playlist/:name\" exact component={Playlist} />\n                <Route path=\"/album/:id\" exact component={Album} />\n                <Route path=\"/user/album/:id\" exact component={Playlist} />\n                <Route path=\"/browse/:id\" exact component={Browse} />\n                <Route path=\"/artists\" exact component={Artists} />\n                <Route path=\"/artist/:artist_id\" exact component={Artist} />\n                <Route path=\"/albums\" exact component={Albums} />\n              </Switch>\n            </div>\n          </div>\n          <div className=\"right\"></div>\n          <div className=\"left\"></div>\n\n          <Navigation />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default connect(null, { setTokenStatus })(App);\n","import { combineReducers } from \"redux\";\n\n//user\nimport userPlaylistsReducer from \"./user/userPlaylistsReducer\";\n\n//tracks\nimport playlistTracksReducer from \"./tracks/playlistTracksReducer\";\n\n//token\nimport tokenStatus from \"./tokenStatus/tokenStatusReducer\";\n\n//currentmusicindex\nimport setCurrentMusicIndex from \"./currentMusicIndex/currentMusicIndexReducer\";\n\n//search results\nimport searchResultsReducer from \"./searchResults.js/searchResultsReducer\";\n\n//new releases\nimport newReleasesReducer from \"./newReleases/newReleasesReducer\";\n\n//featured playlists\nimport featuredPlaylistsReducer from \"./featuredPlaylists/featuredPlaylistsReducer\";\n\n//album\nimport albumReducer from \"./album/albumTracksReducer\";\n\n//mytopartists\nimport myTopArtistsReducer from \"./myTopArtists/myTopArtistsReducer\";\n\n//artist top tracks\nimport artistTopTracksReducer from \"./artistsTopTracks/artistTopTracksReducer\";\n\n//artist\nimport artistReducer from \"./artist/artistReducer\";\n\n//albums\nimport albumsReducer from \"./albums/albumsReducer\";\nimport getAlbumReducer from \"./getAlbum/getAlbumReducer\";\n\n//take reducer put it inside to combineReducers\nexport default combineReducers({\n  userPlaylists: userPlaylistsReducer,\n  playlistsTracks: playlistTracksReducer,\n  tokenStatus: tokenStatus,\n  currentMusicIndex: setCurrentMusicIndex,\n  searchResults: searchResultsReducer,\n  newReleasesAlbums: newReleasesReducer,\n  featuredPlaylists: featuredPlaylistsReducer,\n  albumTracks: albumReducer,\n  myTopArtists: myTopArtistsReducer,\n  artistTopTracks: artistTopTracksReducer,\n  artist: artistReducer,\n  albums: albumsReducer,\n  album: getAlbumReducer,\n});\n","import { GET_USER_PLAYLISTS } from \"../../actions/types\";\n\nexport default (state = [], { type, payload }) => {\n  switch (type) {\n    case GET_USER_PLAYLISTS:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { GET_PLAYLIST_TRACKS } from \"../../actions/types\";\n\nexport default (state = [], { type, payload }) => {\n  switch (type) {\n    case GET_PLAYLIST_TRACKS:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { SET_TOKEN_STATUS } from \"../../actions/types\";\n\nexport default (state = {}, { type, payload }) => {\n  switch (type) {\n    case SET_TOKEN_STATUS:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { SET_CURRENT_MUSIC_INDEX } from \"../../actions/types\";\n\nexport default (state = 0, { type, payload }) => {\n  switch (type) {\n    case SET_CURRENT_MUSIC_INDEX:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { GET_SEARCH_RESULTS } from \"../../actions/types\";\n\nexport default (state = {}, { type, payload }) => {\n  switch (type) {\n    case GET_SEARCH_RESULTS:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { GET_FEATURED_PLAYLISTS } from \"../../actions/types\";\n\nexport default (state = {}, { type, payload }) => {\n  switch (type) {\n    case GET_FEATURED_PLAYLISTS:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { GET_FEATURED_PLAYLISTS } from \"../../actions/types\";\n\nexport default (state = {}, { type, payload }) => {\n  switch (type) {\n    case GET_FEATURED_PLAYLISTS:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { GET_ALBUM_TRACKS } from \"../../actions/types\";\n\nexport default (state = {}, { type, payload }) => {\n  switch (type) {\n    case GET_ALBUM_TRACKS:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { GET_MY_TOP_ARTISTS } from \"../../actions/types\";\n\nexport default (state = [], { type, payload }) => {\n  switch (type) {\n    case GET_MY_TOP_ARTISTS:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { GET_ARTIST_TOP_TRACKS } from \"../../actions/types\";\n\nexport default (state = [], { type, payload }) => {\n  switch (type) {\n    case GET_ARTIST_TOP_TRACKS:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { GET_ARTIST } from \"../../actions/types\";\n\nexport default (state = {}, { type, payload }) => {\n  switch (type) {\n    case GET_ARTIST:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { GET_MY_SAVED_ALBUMS } from \"../../actions/types\";\n\nexport default (state = {}, { type, payload }) => {\n  switch (type) {\n    case GET_MY_SAVED_ALBUMS:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import { GET_ALBUM } from \"../../actions/types\";\n\nexport default (state = {}, { type, payload }) => {\n  switch (type) {\n    case GET_ALBUM:\n      return payload;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\n//redux store\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\n//Wire up Provider to App to gain access to redux store with connect function\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\"),\n);\n"],"sourceRoot":""}